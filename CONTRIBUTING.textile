h1. How to contribute

p. *TL;DR* fork the project and send pull requests.

p. The following document explains how new changes _should_ be made.


h2. Getting Started

* Make sure you have a "GitHub account":https://github.com/signup/
* Submit a ticket for your issue, assuming one does not already exist.
** Include steps to reproduce when it is a bug.
** Include an example call and expected output when it is a feature request.
* Fork the repository on GitHub.

h2. Making Changes

* Create a topic branch from where you want to base your work.
** This is usually the @master@ branch.
** To quickly create a topic branch based on @master@:
*** @git checkout -b issueXYZ origin/master@.
** Please avoid working directly on the @master@ branch.
* Make commits of logical units.
* If necessary rewrite the commit history before pushing changes.
* Make sure your commit messages are in the proper format.
** Use tools to help you write in the proper format (e.g. "eGit":http://www.eclipse.org/egit/ )

bq.. 
(#99999) Make the example in CONTRIBUTING imperative and concrete.

Without this patch applied the example commit message in the CONTRIBUTING
document is not a concrete example.  This is a problem because the
contributor is left to imagine what the commit message should look like
based on a description rather than an example.  This patch fixes the
problem by making the example concrete and imperative.

The first line is a real life imperative statement with a ticket number
from our issue tracker.  The body describes the behavior without the patch,
why this is a problem, and how the patch fixes the problem when applied.
 
p. 

* Make sure you have added the necessary tests for your changes.
* Run _all_ the tests to assure nothing else was accidentally broken:
** @mvn clean verify@ 

h2. Submitting Changes

* Push your changes to a topic branch in your fork of the repository.
* Submit a pull request.

h1. Additional Resources

* "General GitHub documentation":http://help.github.com/
* "GitHub pull request documentation":http://help.github.com/send-pull-requests/
* "Clojure style guide":https://github.com/bbatsov/clojure-style-guide

h1. Setup

p. This project is using "Clojure":http://clojure.org/, "Maven":http://maven.apache.org/, "Eclipse":http://eclipse.org/ and "Git":http://git-scm.com/ as the main development tools. To build the project yourself just download & install at least Clojure 1.5 & Maven 3.0 and call *mvn install* inside the project folder. Maven should then proceed to clean, build, test, package and install this project.

p. Use the project import wizard from Eclipse to import this project. The integrated m2e-plugin will automatically setup the needed configuration files for Eclipse. If you are using an old version of Eclipse run *mvn eclipse:eclipse* first and then import this project into Eclipse.

h1. Versioning

p. This project follows the "semantic versioning":http://semver.org/ guidelines.